configfile: "config.yaml"

###### paths ###############
DATA = config["general_paths"]["data"]
SRC = config["general_paths"]["src"]
CONDA_ENVS = config["general_paths"]["conda_envs"]
METADATA = config["paths"]["metadata"]
DATABASE = config["paths"]["database"]
GENE_SETS_DIR = config["paths"]["gene_sets_dir"]
METASAMPLES_DIR = config["paths"]["metasamples_dir"]
AVERAGE_EXPR_DIR = config["paths"]["average_expr_dir"]
PCA_ANALYSIS_DIR = config["paths"]["pca_analysis"]
SPLSDA_ANALYSIS_DIR = config["paths"]["splsda_analysis"]
DELTA_ZSCORE_DIR = config["paths"]["delta_zscore_dir"]
GO_TRANSFERS = config["paths"]["go_transfers"]

######## tools ############
RSCRIPT = config["tools"]["rscript"]
FINE_TUNE_SPLSDA_CLADE_TISSUE_1BY1 = config["tools"]["fine_tune_splsda_clade_tissue_1by1"]
RUN_GPROFILER2 = config["tools"]["run_gprofiler2"]
SAVE_LOADINGS_1BY1 = config["tools"]["save_loadings_clade_tissue_1by1"]
SAVE_EXTRA_FILES = config["tools"]["save_extra_files"]
FILTER_SPLSDA_LOADINGS_1BY1 = config["tools"]["filter_splsda_loadings_1by1"]

###### variables ###########
MY_VERSION = config["variables"]["my_version"]
ALL_SPECIES = config["variables"]["all_species"]
BILATERIA = ALL_SPECIES
VERTEBRATA = config["variables"]["vertebrata"]
INSECTA = config["variables"]["insecta"]
OUTGROUPS = config["variables"]["outgroups"]
DEUTEROSTOMA = config["variables"]["deuterostoma"]
PROTOSTOMA = config["variables"]["protostoma"]
CLADES = config["variables"]["clades"]

CLADE_SPECIES_DICT = {}
CLADE_SPECIES_DICT["Vertebrata"] = VERTEBRATA
CLADE_SPECIES_DICT["Insecta"] = INSECTA
CLADE_SPECIES_DICT["Bilateria"] = BILATERIA

CATEGORIES = config["variables"]["categories"]
EVO_TYPES = config["variables"]["evo_types"]
EXPR_TYPES = config["variables"]["expr_types"]
ALL_TISSUES = config["variables"]["all_tissues"]

HIGHER_GO_CUTOFF = config["variables"]["higher_GO_cutoff"]
LOWER_GO_CUTOFF =  config["variables"]["lower_GO_cutoff"]
EXPR_SUFFIX = config["variables"]["expr_suffix"]
EXPR_SUFFIX_FILTER = config["variables"]["expr_suffix_filter"]


###### targets ##########
FINE_TUNED_SPLSDA_CLADE_TISSUE_1BY1 = expand("{path}/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}-tuned_sPLSDA-clade_tissue-{tissue}.RDATA", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, category=CATEGORIES, clade="Bilateria", evo_type="conserved", expr_type=["metasamples_median_expr"], tissue=ALL_TISSUES)
FINE_TUNED_SPLSDA_CLADE_TISSUE_1BY1_TWO_GROUPS = expand("{path}/{my_version}/{category}/Bilateria/{evo_type}/Bilateria_{evo_type}-{expr_type}-tuned_sPLSDA-clade_tissue_two_groups_{clade}-{tissue}.RDATA", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, category=CATEGORIES, clade=["Vertebrata", "Insecta"], evo_type="conserved", expr_type=["metasamples_median_expr"], tissue=ALL_TISSUES)
LOADINGS_TISSUE_1BY1 = expand("{path}/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/PC{num}_loadings.txt", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, category=CATEGORIES, clade="Bilateria", evo_type="conserved", tissue=ALL_TISSUES, num=list(range(1,3)), expr_type="metasamples_median_expr")
LOADINGS_GENEID_TISSUE_1BY1 = expand("{path}/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/Positive_PC{num}_loadings_all_geneID.txt", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, category=CATEGORIES, clade="Bilateria", evo_type="conserved", tissue=ALL_TISSUES, num=list(range(1,4)), expr_type="metasamples_median_expr")
FILES_FOR_PLOTTING = expand("{path}/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/all_PC_coordinates.txt", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, category=CATEGORIES, clade="Bilateria", evo_type="conserved", expr_type="metasamples_median_expr", tissue=ALL_TISSUES)
FILTERED_LOADINGS = expand("{path}/{my_version}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/splsda_zscore_comb/{clade}_{tissue}_splsda-zscore_loadings_{input_type}-GO_input.txt", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, tissue=ALL_TISSUES, clade=["Vertebrata", "Insecta"], input_type=["Hs2", "orthogroups"])

GO_ENRICHMENTS_1BY1 = expand("{path}/{my_version}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/splsda_zscore_comb/GO_enrichments/{clade}_{tissue}_splsda-zscore_loadings_orthogroups_from_{species}-GO_res.tab", path=SPLSDA_ANALYSIS_DIR, my_version=MY_VERSION, tissue=ALL_TISSUES, clade=["Vertebrata", "Insecta"], species=["Hs2", "Dme"])


####### rules ############
rule all:	
	input:
	
#######################################
###### sPLS-DA FINE TUNING ############
#######################################

rule fine_tune_sPLSDA_clade_tissue_1by1:
	input:
		expr_table = PCA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}"+EXPR_SUFFIX,
		metadata = expand("{path}/{species}_samples_info.tab", path=METADATA, species=ALL_SPECIES)
	output:
		SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}-tuned_sPLSDA-clade_tissue-{tissue}.RDATA"
	params:
		all_species = lambda wildcards: ",".join(CLADE_SPECIES_DICT[wildcards.clade]),
		vertebrata = ",".join(VERTEBRATA),
		insecta = ",".join(INSECTA)
	conda:
		CONDA_ENVS+"/r_env.yml"	
	shell:
		"""
		Rscript {FINE_TUNE_SPLSDA_CLADE_TISSUE_1BY1} \
			{input.expr_table} \
			{METADATA} \
			{params.all_species} \
			{params.vertebrata} \
			{params.insecta} \
			{wildcards.tissue} \
			{output} 
		"""


#######################################
###### Get loadings ###################
#######################################

rule save_loadings_tissue_1by1:
	input:
		model = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}-tuned_sPLSDA-clade_tissue-{tissue}.RDATA",
		expr_table = PCA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}"+EXPR_SUFFIX
	output:
		SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/PC{num}_loadings.txt"	
	params:
		metadata_dir = METADATA,
		all_species = ",".join(ALL_SPECIES),
		vertebrata = ",".join(VERTEBRATA),
		insecta = ",".join(INSECTA),
		output_dir = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/",
		output_prefix = "PC",
		output_suffix = "_loadings.txt",
		output_suffix_all = "_ALL_loadings.txt"
	conda:
		CONDA_ENVS+"/r_env.yml"
	shell:
		"""
		Rscript {SAVE_LOADINGS_1BY1} 	{input.model} \
						{input.expr_table} \
						{wildcards.tissue} \
						{wildcards.num} \
						{params.metadata_dir} \
						{params.all_species} \
						{params.vertebrata} \
						{params.insecta} \
						{params.output_dir} \
						{params.output_prefix} \
						{params.output_suffix} \
						{params.output_suffix_all}
		"""

rule save_extra_files:
	input:
		model = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}-tuned_sPLSDA-clade_tissue-{tissue}.RDATA",
		expr_table= PCA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/{clade}_{evo_type}-{expr_type}"+EXPR_SUFFIX 
	output:
		PC_coords = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/all_PC_coordinates.txt",
		variance = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/explained_variance.txt",
		loadings_number = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/loadings_number.txt"
	params:
		metadata_dir = METADATA,
		all_species = ",".join(ALL_SPECIES)
	conda:
		CONDA_ENVS+"/r_env.yml"
	shell:
		"""
		Rscript {SAVE_EXTRA_FILES}	{input.model} \
						{input.expr_table} \
						{params.metadata_dir} \
						{params.all_species} \
						{output.PC_coords} \
						{output.variance} \
						{output.loadings_number}
		"""


rule get_loadings_geneIDs_1by1:
	input:
		loadings = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/PC{num}_loadings.txt",
		orthogroups = GENE_SETS_DIR+"/{my_version}/{category}/{clade}/conserved/{clade}_conserved-reclustered_orthogroups-BH_genes.txt"
	output:
		human_negative = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/Negative_PC{num}_loadings_Hs2_geneID.txt",
		human_positive = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/Positive_PC{num}_loadings_Hs2_geneID.txt",
		all_negative = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/Negative_PC{num}_loadings_all_geneID.txt",
		all_positive = SPLSDA_ANALYSIS_DIR+"/{my_version}/{category}/{clade}/{evo_type}/loadings_clade_tissue/{expr_type}/{tissue}/Positive_PC{num}_loadings_all_geneID.txt"
	shell:	
		"""
		cat {input.loadings} | awk '$2<0'       | translate -k <(cat {input.orthogroups} | grep Hs2 | cut -f1,3) 1 | cut -f1 > {output.human_negative}; \
		cat {input.loadings} | awk '$2>0'       | translate -k <(cat {input.orthogroups} | grep Hs2 | cut -f1,3) 1 | cut -f1 > {output.human_positive}; \
		cat {input.loadings} | awk '$2<0' 	| translate -a -v -e NA <(cat {input.orthogroups} | grep Hs2 | cut -f1,3) 1 \
							| translate -a -r -v -e NA <(cat {input.orthogroups} | grep Dme | cut -f1,3) 1 \
							| translate -a -r -v -e NA <(cat {input.orthogroups} | grep Mm2 | cut -f1,3) 1 | cut -f1,2,4,5 > {output.all_negative}; \
		cat {input.loadings} | awk '$2>0'	| translate -a -v -e NA <(cat {input.orthogroups} | grep Hs2 | cut -f1,3) 1 \
							| translate -a -r -v -e NA <(cat {input.orthogroups} | grep Dme | cut -f1,3) 1 \
							| translate -a -r -v -e NA <(cat {input.orthogroups} | grep Mm2 | cut -f1,3) 1 | cut -f1,2,4,5 > {output.all_positive}
		"""


#Require the highest zscore in the tissue of interest
#The script itself contains a named vector with the correspondences for the different tissues
#I do not specify all the loadings file I will upload, just the one for the first PC.
rule filter_loadings_by_expr:
	input:
		expr_table = PCA_ANALYSIS_DIR+"/{my_version}/STRICT/Bilateria/conserved/Bilateria_conserved-tissue_average_expr"+EXPR_SUFFIX_FILTER,
		loadings = expand("{path}/{{my_version}}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/{loading_type}_PC1_loadings_all_geneID.txt", path=SPLSDA_ANALYSIS_DIR, tissue=ALL_TISSUES, loading_type=["Positive", "Negative"]) 
	output:
		all_gene_IDs = expand("{path}/{{my_version}}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/splsda_zscore_comb/{clade}_{tissue}_splsda-zscore_loadings-all_geneID.txt", path=SPLSDA_ANALYSIS_DIR, clade=["Vertebrata", "Insecta"], tissue=ALL_TISSUES),
		GO_input = expand("{path}/{{my_version}}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/splsda_zscore_comb/{clade}_{tissue}_splsda-zscore_loadings_{input_type}-GO_input.txt", path=SPLSDA_ANALYSIS_DIR, tissue=ALL_TISSUES, clade=["Vertebrata", "Insecta"], input_type=["Hs2", "orthogroups"])
	params:
		tissues = ",".join(ALL_TISSUES),
		vertebrata = ",".join(VERTEBRATA),
		insecta = ",".join(INSECTA),
		outgroups = ",".join(OUTGROUPS),
		loadings_dir = SPLSDA_ANALYSIS_DIR+"/{my_version}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr",
		loadings_suffix = "_loadings_all_geneID.txt",
		output_dir = SPLSDA_ANALYSIS_DIR+"/{my_version}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr",
		output_suffix_all = "_splsda-zscore_loadings-all_geneID.txt",
		output_suffix_Hs2_GO_input = "_splsda-zscore_loadings_Hs2-GO_input.txt",
		output_suffix_orthogroups_GO_input = "_splsda-zscore_loadings_orthogroups-GO_input.txt"
	shell:
		"""
		{RSCRIPT} {FILTER_SPLSDA_LOADINGS_1BY1}	{input.expr_table} \
							{params.tissues} \
							{params.vertebrata} \
							{params.insecta} \
							{params.outgroups} \
							{params.loadings_dir} \
							{params.loadings_suffix} \
							{params.output_dir} \
							{params.output_suffix_all} \
							{params.output_suffix_Hs2_GO_input} \
							{params.output_suffix_orthogroups_GO_input}
		"""




#######################################
###### GO enrichments #################
#######################################
rule GO_enrichment_gprofiler2_by_orthogroup:
	input:
		gene_set = SPLSDA_ANALYSIS_DIR+"/{my_version}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/splsda_zscore_comb/{clade}_{tissue}_splsda-zscore_loadings_orthogroups-GO_input.txt",
		background = GO_TRANSFERS+"/{my_version}/GO_backgrounds/orthogroups-GO_background.txt",
		annot = GO_TRANSFERS+"/{my_version}/GO_annot/{species}_transfers/orthogroups_from_{species}-transferred_GO-reduced.gmt"
	output:
		SPLSDA_ANALYSIS_DIR+"/{my_version}/STRICT/Bilateria/conserved/loadings_clade_tissue/metasamples_median_expr/{tissue}/splsda_zscore_comb/GO_enrichments/{clade}_{tissue}_splsda-zscore_loadings_orthogroups_from_{species}-GO_res.tab"
	conda:
		CONDA_ENVS+"/r_env.yml"
	shell:
		"""
		Rscript {RUN_GPROFILER2} {input.gene_set} {input.background} {input.annot} {output}
		"""
