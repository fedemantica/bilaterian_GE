general_paths:
  data: "/users/mirimia/fmantica/projects/bilaterian_GE/data"
  downloaded: "/users/mirimia/fmantica/projects/bilaterian_GE/downloaded"
  src: "/users/mirimia/fmantica/projects/bilaterian_GE/src"
  conda_envs: "/users/mirimia/fmantica/projects/bilaterian_GE/src/conda_envs"

paths:
  broccoli: "/users/mirimia/fmantica/projects/bilaterian_GE/data/broccoli"
  database: "/users/mirimia/fmantica/projects/bilaterian_GE/data/DB"
  genome_dir: "/users/mirimia/fmantica/projects/bilaterian_GE/data/DB/genomes"
  gtf_ref_dir: "/users/mirimia/fmantica/projects/bilaterian_GE/data/DB/gtf/ref"
  gtf_master_dir: "/users/mirimia/fmantica/projects/bilaterian_GE/data/DB/gtf/master"
  exint_ref_dir: "/users/mirimia/fmantica/projects/bilaterian_GE/data/DB/exint/ref"
  geneID_params: "./geneID_params.txt"  
  problematic_genes: "/users/mirimia/fmantica/projects/bilaterian_GE/data/broccoli/All_version/corrected_gtfs/problematic_genes-original_geneIDs.txt"

tools:
  broccoli_main: "/users/mirimia/fmantica/software/Broccoli-master-2/broccoli.py"
  get_exint_fasta: "bin/get_exint_file.pl"
  get_start_stop_info: "bin/get_start_stop_info.py"
  compute_prot_len: "bin/compute_prot_len.py"
  filter_by_same_chr_strand: "bin/filter_by_same_chr_strand.py"
  filter_by_sequentiality: "bin/filter_by_sequentiality.py"
  filter_orthogroups_with_broken_genes: "bin/filter_orthogroups_with_broken_genes.py"
  get_broken_human_genes_pairs: "bin/get_broken_human_genes_pairs.py"
  select_longest_human_pairs: "bin/select_longest_human_pairs.py"
  get_control_gene_pairs: "bin/get_control_gene_pairs.py"
  mafft: "/users/mirimia/fmantica/software/src/MAFFT_V2.0/mafft.bat"
  combine_broken_pairs_info: "bin/combine_broken_pairs_info.py"
  combine_longest_human_info: "bin/combine_longest_human_info.py"
  join_broken_and_longest_human_info: "bin/join_broken_and_longest_human_info.py"
  select_final_broken_genes: "bin/select_final_broken_genes.py"
  isolate_chimeric_orthogroups: "bin/isolate_chimeric_orthogroups.py"
  compute_prot_overlap: "bin/compute_protein_overlap.py"
  compute_sim_score: "bin/compute_sim_score.pl"
  target_matched_portion: "bin/target_matched_portion.py"
  get_aa_position: "bin/get_exon_aa_coords.py"
  align_chimeric_OG: "bin/align_chimeric_OG.py"
  get_chimeric_aligned_region: "bin/get_chimeric_aligned_region.py"
  classify_chimeric_genes: "bin/classify_chimeric_genes.py"
  generate_brochi_geneIDs: "bin/generate_brochi_geneIDs.py"
  correct_ref_gtf: "bin/correct_ref_gtf.py"
  correct_master_gtf: "bin/correct_master_gtf.py"
  correct_gene_orthogroups: "bin/correct_gene_orthogroups.py"
  format_orthopairs: "bin/format_orthopairs.py"
  enrich_human_and_merge_onhologs: "bin/enrich_human_and_merge_onhologs.py"
  correct_human_ref_gtf: "bin/correct_human_ref_gtf.py"

variables:
  all_species: ["Hs2", "Mm2", "Bt2", "Mdo", "Gga", "Xtr", "Dre", "Cmi", "Bla", "Sp2", "Dme", "Eba", "Aae", "BmA", "Tca", "Ame", "Bge", "Cdi", "Sma", "Obi"]
  my_version: "All_version"
  gene_num: ["two_genes", "more_genes"]
  human_id: ["Hs2"]
  species_to_correct: ["Bt2", "Mdo", "Gga", "Xtr", "Dre", "Cmi", "Bla", "Sp2", "Eba", "Aae", "BmA", "Tca", "Ame", "Bge", "Cdi", "Sma", "Obi"]
  seqsim_cutoff: 0.30
  human_match_cutoff: 0.25
  overlap_stringency: 0.60
  min_aligned: 10
